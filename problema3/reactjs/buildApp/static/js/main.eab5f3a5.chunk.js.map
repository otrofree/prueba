{"version":3,"sources":["logo.svg","AdminUsers.js","AdminBook.js","Libros.js","Prestamos.js","AdminPrestamos.js","App.js","index.js"],"names":["Input","Form","ALLUSER","Field","Control","Label","gql","EDITUSER","NEWUSER","DELUSER","AdminUsers","withApollo","props","useQuery","data","loading","error","refetch","useState","editItem","setEditItem","newItem","setNewItem","email","nombre","rol","password","usuarioId","form","setForm","updateForm","target","name","value","saveEdit","i","valida","msgs","edo","parseInt","isNaN","validateEdit","client","query","variables","then","result","undefined","errors","console","log","message","cancelEdit","Fragment","class","rounded","color","onClick","onChange","type","className","allUser","map","e","item","prepareEdit","deleteUser","ALLBOOK","EDITBOOK","NEWBOOK","DELBOOK","AdminBook","titulo","autor","editorial","sinopsis","edicion","libroId","trim","allBook","deleteLibro","NEWBORROW","Libros","updatePrestamo","solicita","MYBORROW","estados","Prestamos","itemAct","useEffect","update","myBorrow","libro","estado","ALLBORROW","CONFIRMBORROW","RETURNBORROW","edoShow","setEdoShow","procesa","id","prestamoId","regreso","retIcon","handleAddrTypeChange","selected","allBorrow","LOGIN","Login","data-section-id","data-category","Group","fullwidth","login","ErrorModal","show","onClose","Card","Head","Title","Body","Item","renderAs","position","size","alt","src","msg","Foot","style","alignItems","justifyContent","BuquedaComp","busqueda","setBusqueda","kind","search","qry","a","MainLayout","setUpdate","Column","AdminPrestamos","App","userName","setUserName","userId","setUserId","localStorage","getItem","userRol","setUserRol","isLogin","setIsLogin","isError","setIsError","React","isMenuActive","setisMenuActive","useMutation","userLogin","ld","setItem","token","usuario","fixed","Brand","href","width","height","Burger","data-target","Menu","Container","removeItem","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","ApolloClient","cache","InMemoryCache","link","concat","defaultOptions","watchQuery","fetchPolicy","errorPolicy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eab5f3a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nimport { withApollo } from '@apollo/react-hoc';    \n\nimport React, { Fragment, useState, useCallback } from 'react'\nimport { gql, useQuery,useMutation } from '@apollo/client';\n\n// los componentes de Bulma, \nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Button, Navbar, Form, Modal, Section, Container, Notification, Media, Image, Content, Level,\n\t\tColumns, Table } from 'react-bulma-components';\n\nconst { Input, Field, Control, Label } = Form;\n\n \n\nconst ALLUSER = gql`\n   query {\n\tallUser {\n      usuarioId\n      nombre\n      email\n      rol\n    }\n   }\n `;\n\n \n const EDITUSER =gql`\n mutation EditUser($email: String, $password: String, $rol: Int, $nombre: String, $usuarioId: Int!) {\n  editUser(usuarioId: $usuarioId, email: $email, password: $password, rol: $rol, nombre: $nombre) {\n    usuarioId\n    nombre\n    rol\n\temail\n  }\n}\n `;\n \n const NEWUSER =gql`\n\tmutation NewUser($email: String!, $nombre: String!, $password: String!, $rol: Int!) {\n\t\tnewUser(email: $email, nombre: $nombre, password: $password, rol: $rol) {\n\t\t\tusuarioId\n\t\t}\n\t}\n `;\n \nconst DELUSER=gql`\n\tmutation DelUser($usuarioId: Int!) {\n\t\tdelUser(usuarioId: $usuarioId) {\n\t\t\temail\n\t\t}\n\t}\n `;\n \n//TODO - poner un select box en el campo de Rol\n//TODO - hacer paginación de los elementos\nvar AdminUsers = withApollo((props) =>{\n\t// los datos de todos los usuarios\n\tconst { loading, error, data, refetch } = useQuery(ALLUSER); \n\tconst [editItem, setEditItem] = useState(-1);\n\tconst [newItem, setNewItem] = useState(false);\n\t\n\t// para el formulario de edicion de datos\n\tconst [form, setForm] = useState({ email: '', nombre:'', rol:'', password: '', usuarioId:-1 });\n    const updateForm = (({ target }) => setForm({ ...form, [target.name]: target.value }))\n\t\n\t\n\tfunction prepareEdit(i) {\n\t\tlet item=data.allUser[i];\n\t\t\n\t\tsetForm({email:item.email, nombre:item.nombre, rol:item.rol, password: '', usuarioId:item.usuarioId });\n\t\tsetEditItem(i);\n\t}\n\t\n\tfunction prepareNew() {\t\n\t\tsetForm({ email: '', nombre:'', rol:'', password: '', usuarioId:-1 });\n\t\tsetNewItem(true);\n\t}\n\t\n\tfunction deleteUser(i) {\n\t\t\t\n\t\tprops.client\n\t\t  .query({\n\t\t\tquery: DELUSER,\n\t\t\tvariables: {usuarioId:data.allUser[i].usuarioId}\n\t\t  })\n\t\t  .then(result => {\t\n\t\t\t\t//console.log(\"res\",result);\n\t\t\t\t// veo si hay errores\n\t\t\t\tif(result.errors !== undefined) {\n\t\t\t\t\t// debe lanzar la ventana modal de error\n\t\t\t\t\tconsole.log(\"error\",result.errors[0].message);\n\t\t\t\t} else {\n\t\t\t\t\t// actualizo la tabla\t\t\t\n\t\t\t\t\trefetch()\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t}\n\t\n\tfunction validateEdit(i) {\n\t\tlet msgs=\"\", edo=true;\n\t\t\n\t\tif(form.rol!=='') {\n\t\t\tform.rol=parseInt(form.rol);\n\t\t\t//console.log(\"...\",form.rol); return false;\n\t\t\tif(form.rol>2 || form.rol<0 || isNaN(form.rol)) {\n\t\t\t\tedo=false; msgs=msgs+\" El rol debe ser 0,1 o 2\";\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn {edo,msgs};\n\t}\n\t\n\tfunction saveEdit(i) {\n\t\t// hago la llamada a GrapQL para que modifique los datos\n\t\tlet valida=validateEdit(i)\t\n\t\tif(!valida.edo) {\n\t\t\tconsole.log(\"Error de formulario\", valida.msgs);\n\t\t\treturn;\n\t\t}\n\n\t\t\n\t\t// si i=-1 agraga un nuevo usuario\n\t\tprops.client\n\t\t  .query({\n\t\t\tquery: (i==-1? NEWUSER : EDITUSER),\n\t\t\tvariables: form\n\t\t  })\n\t\t  .then(result => {\t\n\t\t\t\t//console.log(\"res\",result);\n\t\t\t\t// veo si hay errores\n\t\t\t\tif(result.errors !== undefined) {\n\t\t\t\t\t// debe lanzar la ventana modal de error\n\t\t\t\t\tconsole.log(\"error\",result.errors[0].message);\n\t\t\t\t} else {\n\t\t\t\t\t// actualizo la tabla\t\t\t\n\t\t\t\t\trefetch()\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\t\t  \n\t\tsetEditItem(-1);\n\t\tsetNewItem(false);\n\t}\n\t\n\tfunction cancelEdit(i) {\t\t\n\t\tsetEditItem(-1);\n\t\tsetNewItem(false);\n\t}\n\t\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h1 class=\"title\">Administrar usuarios</h1>\n\n\t\t\t<Section>\t\n\t\t\t\t<Button rounded color=\"primary\" onClick={() => prepareNew() }>Agregar</Button>\n\t\t\t\t\n\t\t\t  <Table>\n\t\t\t\t<thead>\n\t\t\t\t  <tr>\t\n\t\t\t\t\t<th>Email</th>\n\t\t\t\t\t<th>Nombre</th>\n\t\t\t\t\t<th>Rol</th>\n\t\t\t\t\t<th>Password</th>\n\t\t\t\t  </tr>\n\t\t\t\t </thead>\n\t\t\t\t <tbody>\n\t\t\t\t  {newItem && <tr >\n\t\t\t\t\t\t<td><Input name=\"email\" value={form.email} onChange={updateForm} /></td>\n\t\t\t\t\t\t<td><Input name=\"nombre\" value={form.nombre} onChange={updateForm} /></td>\n\t\t\t\t\t\t<td><Input name=\"rol\" value={form.rol} onChange={updateForm} /></td>\n\t\t\t\t\t\t<td><Input name=\"password\" value={form.password} onChange={updateForm} type=\"password\"/></td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t<i onClick={() => {saveEdit(-1) }} className=\"fa fa-check\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t<i onClick={() => {cancelEdit() }} className=\"fa fa-times\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t  </tr>\n\t\t\t\t  }\n\t\t\t\t  {data && data.allUser.map(function(e,i) {\n\t\t\t\t\t\tif(editItem == i) {\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn <tr key={i}>\n\t\t\t\t\t\t\t\t\t<td><Input name=\"email\" value={form.email} onChange={updateForm} /></td>\n\t\t\t\t\t\t\t\t\t<td><Input name=\"nombre\" value={form.nombre} onChange={updateForm} /></td>\n\t\t\t\t\t\t\t\t\t<td><Input name=\"rol\" value={form.rol} onChange={updateForm} /></td>\n\t\t\t\t\t\t\t\t\t<td><Input name=\"password\" value={form.password} onChange={updateForm} type=\"password\"/></td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t\t\t\t<i onClick={() => {saveEdit(i) }} className=\"fa fa-check\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t\t\t\t<i onClick={() => {cancelEdit(i) }} className=\"fa fa-times\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn <tr key={i}><td>{e.email}</td><td>{e.nombre}</td><td>{e.rol}</td><td></td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t\t\t\t<i onClick={() => {prepareEdit(i) }} className=\"fa fa-edit\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t\t\t\t<i onClick={() => {deleteUser(i) }} className=\"fa fa-trash\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t}\n\t\t\t\t\t})\t\t\t\t\t\n\t\t\t\t  }\n\t\t\t\t  \n\t\t\t\t </tbody>\n\t\t\t  </Table>\n\n\t\t\t</Section>\n\t\t</React.Fragment>\n\t);\n})\n\n\nexport default AdminUsers;\n","import logo from './logo.svg';\nimport './App.css';\n\nimport { withApollo } from '@apollo/react-hoc';    \n\nimport React, { Fragment, useState, useCallback } from 'react'\nimport { gql, useQuery,useMutation } from '@apollo/client';\n\n// los componentes de Bulma, \nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Button, Navbar, Form, Modal, Section, Container, Notification, Media, Image, Content, Level,\n\t\tColumns, Table } from 'react-bulma-components';\n\nconst { Input, Field, Control, Label } = Form;\n\n \nconst ALLBOOK = gql`\n   query {\n\tallBook {\n      libroId\n      titulo\n      autor\n      editorial\n\t  sinopsis\n\t  edicion\n    }\n   }\n `;\n\n \n const EDITBOOK =gql`\n\t mutation EditBook($titulo: String, $autor: String, $editorial: String, $sinopsis: String,$edicion: String, $libroId: Int!) {\n\t  editBook(libroId: $libroId, titulo: $titulo, autor: $autor, editorial: $editorial, sinopsis: $sinopsis, edicion:$edicion) {\n\t\tlibroId\n\t  }\n\t }\n `;\n \n const NEWBOOK =gql`\n\t mutation NewBook($titulo: String!, $autor: String!, $editorial: String!, $sinopsis: String,$edicion: String) {\n\t  newBook(titulo: $titulo, autor: $autor, editorial: $editorial, sinopsis: $sinopsis, edicion:$edicion) {\n\t\tlibroId\n\t  }\n\t }\n `;\n \nconst DELBOOK=gql`\n\tmutation deleteBook($libroId: Int!) {\n\t\tdeleteBook(libroId: $libroId) {\n\t\t\tlibroId\n\t\t}\n\t}\n `;\n \n//TODO - hacer paginación de los elementos\n//TODO - regresar mesajes de error\t\nvar AdminBook = withApollo((props) =>{\n\t// los datos de todos los libros\n\tconst { loading, error, data, refetch } = useQuery(ALLBOOK); \n\tconst [editItem, setEditItem] = useState(-1);\n\tconst [newItem, setNewItem] = useState(false);\n\t\n\t// para el formulario de edicion de datos\n\tconst [form, setForm] = useState({ titulo: '', autor:'', editorial:'', sinopsis: '', edicion:'', libroId:-1 });\n    const updateForm = (({ target }) => setForm({ ...form, [target.name]: target.value }))\n\t\n\t\n\tfunction prepareEdit(i) {\n\t\tlet item=data.allBook[i];\n\t\t\n\t\tsetForm({titulo:item.titulo, autor:item.autor, editorial:item.editorial, \n\t\t\t\tsinopsis: item.sinopsis, edicion:item.edicion, libroId:item.libroId });\n\t\tsetEditItem(i);\n\t}\n\t\n\tfunction prepareNew() {\t\n\t\tsetForm({ titulo: '', autor:'', editorial:'', sinopsis: '', edicion:'', libroId:-1 });\n\t\tsetNewItem(true);\n\t}\n\t\n\tfunction deleteLibro(i) {\n\t\t\t\n\t\tprops.client\n\t\t  .query({\n\t\t\tquery: DELBOOK,\n\t\t\tvariables: {libroId:data.allBook[i].libroId}\n\t\t  })\n\t\t  .then(result => {\t\n\t\t\t\t//console.log(\"res\",result);\n\t\t\t\t// veo si hay errores\n\t\t\t\tif(result.errors !== undefined) {\n\t\t\t\t\t// debe lanzar la ventana modal de error\n\t\t\t\t\tconsole.log(\"error\",result.errors[0].message);\n\t\t\t\t} else {\n\t\t\t\t\t// actualizo la tabla\t\t\t\n\t\t\t\t\trefetch()\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\n\t}\n\t\n\tfunction validateEdit(i) {\n\t\tlet msgs=\"\", edo=true;\n\n\t\tif(form.autor.trim()==='') {\n\t\t\tedo=false; msgs=msgs+\" \\n El campo autor no puede ser nulo\";\n\t\t}\n\n\t\tif(form.titulo.trim()==='') {\n\t\t\tedo=false; msgs=msgs+\" \\n El campo titulo no puede ser nulo\";\n\t\t}\n\n\t\tif(form.editorial.trim()==='') {\n\t\t\tedo=false; msgs=msgs+\" \\n El campo editoria no puede ser nulo\";\n\t\t}\n\n\t\t\n\t\treturn {edo,msgs};\n\t}\n\t\n\tfunction saveEdit(i) {\n\t\t// hago la llamada a GrapQL para que modifique los datos\n\t\tlet valida=validateEdit(i)\t\n\t\tif(!valida.edo) {\n\t\t\tconsole.log(\"error de formulario\", valida.msgs);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// si i=-1 agraga un nuevo libro\n\t\tprops.client\n\t\t  .query({\n\t\t\tquery: (i==-1? NEWBOOK : EDITBOOK),\n\t\t\tvariables: form\n\t\t  })\n\t\t  .then(result => {\t\n\t\t\t\t//console.log(\"res\",result);\n\t\t\t\t// veo si hay errores\n\t\t\t\tif(result.errors !== undefined) {\n\t\t\t\t\t// debe lanzar la ventana modal de error\n\t\t\t\t\tconsole.log(\"error\",result.errors[0].message);\n\t\t\t\t} else {\n\t\t\t\t\t// actualizo la tabla\t\t\t\n\t\t\t\t\trefetch()\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\t\t  \n\t\tsetEditItem(-1);\n\t\tsetNewItem(false);\n\t}\n\t\n\tfunction cancelEdit(i) {\t\t\n\t\tsetEditItem(-1);\n\t\tsetNewItem(false);\n\t}\n\t\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h1 class=\"title\">Administrar libros</h1>\n\n\t\t\t<Section>\t\n\t\t\t\t<Button rounded color=\"primary\" onClick={() => prepareNew() }>Agregar</Button>\n\t\t\t  <Table>\n\t\t\t\t<thead>\n\t\t\t\t  <tr>\t\n\t\t\t\t\t<th>Titulo</th>\n\t\t\t\t\t<th>Autor</th>\n\t\t\t\t\t<th>Editorial</th>\n\t\t\t\t\t<th>Sinopsis</th>\n\t\t\t\t\t<th>Edicion</th>\n\t\t\t\t  </tr>\n\t\t\t\t </thead>\n\t\t\t\t <tbody>\n\t\t\t\t  {newItem && <tr >\n\t\t\t\t\t\t<td><Input name=\"titulo\" value={form.titulo} onChange={updateForm} /></td>\n\t\t\t\t\t\t<td><Input name=\"autor\" value={form.autor} onChange={updateForm} /></td>\n\t\t\t\t\t\t<td><Input name=\"editorial\" value={form.editorial} onChange={updateForm} /></td>\n\t\t\t\t\t\t<td><Input name=\"sinopsis\" value={form.sinopsis} onChange={updateForm} /></td>\n\t\t\t\t\t\t<td><Input name=\"edicion\" value={form.edicion} onChange={updateForm} /></td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t<i onClick={() => {saveEdit(-1) }} className=\"fa fa-check\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t<i onClick={() => {cancelEdit() }} className=\"fa fa-times\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t  </tr>\n\t\t\t\t  }\n\t\t\t\t  {data && data.allBook.map(function(e,i) {\n\t\t\t\t\t\tif(editItem == i) {\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn <tr key={i}>\n\t\t\t\t\t\t\t\t\t<td><Input name=\"titulo\" value={form.titulo} onChange={updateForm} /></td>\n\t\t\t\t\t\t\t\t\t<td><Input name=\"autor\" value={form.autor} onChange={updateForm} /></td>\n\t\t\t\t\t\t\t\t\t<td><Input name=\"editorial\" value={form.editorial} onChange={updateForm} /></td>\n\t\t\t\t\t\t\t\t\t<td><Input name=\"sinopsis\" value={form.sinopsis} onChange={updateForm} /></td>\n\t\t\t\t\t\t\t\t\t<td><Input name=\"edicion\" value={form.edicion} onChange={updateForm} /></td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t\t\t\t<i onClick={() => {saveEdit(i) }} className=\"fa fa-check\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t\t\t\t<i onClick={() => {cancelEdit(i) }} className=\"fa fa-times\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn <tr key={i}><td>{e.titulo}</td><td>{e.autor}</td><td>{e.editorial}</td><td>{e.sinopsis}</td><td>{e.edicion}</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t\t\t\t<i onClick={() => {prepareEdit(i) }} className=\"fa fa-edit\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t\t\t\t<i onClick={() => {deleteLibro(i) }} className=\"fa fa-trash\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t}\n\t\t\t\t\t})\t\t\t\t\t\n\t\t\t\t  }\n\t\t\t\t  \n\t\t\t\t </tbody>\n\t\t\t  </Table>\n\n\t\t\t</Section>\n\t\t</React.Fragment>\n\t);\n})\n\n\nexport default AdminBook;\n","import logo from './logo.svg';\nimport './App.css';\n\nimport { withApollo } from '@apollo/react-hoc';    \n\nimport React, { Fragment, useState, useCallback } from 'react'\nimport { gql, useQuery,useMutation } from '@apollo/client';\n\n// los componentes de Bulma, \nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Button, Navbar, Form, Modal, Section, Container, Notification, Media, Image, Content, Level,\n\t\tColumns, Table } from 'react-bulma-components';\n\nconst { Input, Field, Control, Label } = Form;\n\n \nconst ALLBOOK = gql`\n   query {\n\tallBook {\n      libroId\n      titulo\n      autor\n      editorial\n\t  sinopsis\n\t  edicion\n    }\n   }\n `;\n \nconst NEWBORROW =gql`\n\t mutation newBorrow($usuarioId: Int!, $libroId: Int!) {\n\t  newBorrow(libroId: $libroId, usuarioId: $usuarioId) {\n\t\tprestamoId\n\t  }\n\t }\n `;\n \nvar Libros = withApollo((props) =>{\n\t// los datos de todos los libros\n\tconst { loading, error, data, refetch } = useQuery(ALLBOOK); \n\t\t\n\tfunction solicita(i) {\n\t\t// hago la llamada a GrapQL para solicitar el prestamo\t\n\t\tprops.client\n\t\t  .query({\n\t\t\tquery: NEWBORROW,\n\t\t\tvariables: {libroId: data.allBook[i].libroId, usuarioId: props.usuarioId }\n\t\t  })\n\t\t  .then(result => {\t\n\t\t\t\t// veo si hay errores\n\t\t\t\tif(result.errors !== undefined) {\n\t\t\t\t\t// debe lanzar la ventana modal de error\n\t\t\t\t\tconsole.log(\"error\",result.errors[0].message);\n\t\t\t\t} else {\n\t\t\t\t\t// actualizo la tabla\t\t\t\n\t\t\t\t\trefetch();\t\t\t\t\t\n\t\t\t\t\tprops.updatePrestamo();\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\t\t  \n\t}\n\t\t\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h1 class=\"title\">Libros existentes</h1>\n\n\t\t\t<Section>\t\n\t\t\t  <Table>\n\t\t\t\t<thead>\n\t\t\t\t  <tr>\t\n\t\t\t\t\t<th>Titulo</th>\n\t\t\t\t\t<th>Autor</th>\n\t\t\t\t\t<th>Editorial</th>\n\t\t\t\t\t<th>Sinopsis</th>\n\t\t\t\t\t<th>Edicion</th>\n\t\t\t\t  </tr>\n\t\t\t\t </thead>\n\t\t\t\t <tbody>\n\t\t\t\t  {data && data.allBook.map(function(e,i) {\n\t\t\t\t\treturn <tr key={i}><td>{e.titulo}</td><td>{e.autor}</td><td>{e.editorial}</td>\n\t\t\t\t\t\t\t<td>{e.sinopsis}</td><td>{e.edicion}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t\t<i onClick={() => {solicita(i) }} className=\"fa fa-book\"></i>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t})\t\t\t\t\t\n\t\t\t\t  }\t\t\t\t  \n\t\t\t\t </tbody>\n\t\t\t  </Table>\n\n\t\t\t</Section>\n\t\t</React.Fragment>\n\t);\n})\n\n\nexport default Libros;","import logo from './logo.svg';\nimport './App.css';\n\nimport { withApollo } from '@apollo/react-hoc';    \n\nimport React, { Fragment, useState, useEffect, useCallback } from 'react'\nimport { gql, useQuery,useMutation } from '@apollo/client';\n\n// los componentes de Bulma, \nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Button, Navbar, Form, Modal, Section, Container, Notification, Media, Image, Content, Level,\n\t\tColumns, Table } from 'react-bulma-components';\n\nconst { Input, Field, Control, Label } = Form;\n\n \nconst MYBORROW =gql`\n\t query MyBorrow($usuarioId:Int!){\n\t  myBorrow(usuarioId:$usuarioId)  {\n\t\tlibro { titulo }\n\t\testado\n\t  }\n\t}\n `;\n \nconst estados={'0':\"Pendiente\", '1':'Aprobado', '2':\"Regresado\"}\n \nvar Prestamos = withApollo((props) =>{\n\t// los datos de todos mis prestamos\n\tconst { loading, error, data, refetch } = useQuery(MYBORROW, \n\t\t\t\t\t\t\t\t\t\t\t\t\t{variables: { usuarioId: props.usuarioId }}); \n\tvar itemAct=0;\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tuseEffect(() => {\n\t\t// veo si estan forzano una actualización\n\t\tif(itemAct != props.update) {\n\t\t\titemAct = props.update;\n\t\t\t// actualizo la tabla\n\t\t\trefetch();\n\t\t}\n\t});\n\t\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h1 class=\"title\">Mis prestamos</h1>\n\n\t\t\t<Section>\t\n\t\t\t  <Table>\n\t\t\t\t<thead>\n\t\t\t\t  <tr>\t\n\t\t\t\t\t<th>Titulo</th>\n\t\t\t\t\t<th>Edo. Prestamo</th>\n\t\t\t\t  </tr>\n\t\t\t\t </thead>\n\t\t\t\t <tbody>\n\t\t\t\t  {data && data.myBorrow.map(function(e,i) {\n\t\t\t\t\treturn <tr key={i}><td>{e.libro.titulo}</td><td>{estados[e.estado]}</td></tr>\n\t\t\t\t\t})\t\t\t\t\t\n\t\t\t\t  }\t\t\t\t  \n\t\t\t\t </tbody>\n\t\t\t  </Table>\n\n\t\t\t</Section>\n\t\t</React.Fragment>\n\t);\n})\n\n\nexport default Prestamos;","import logo from './logo.svg';\nimport './App.css';\n\nimport { withApollo } from '@apollo/react-hoc';    \n\nimport React, { Fragment, useState, useEffect, useCallback } from 'react'\nimport { gql, useQuery,useMutation } from '@apollo/client';\n\n// los componentes de Bulma, \nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Button, Navbar, Form, Modal, Section, Container, Notification, Media, Image, Content, Level,\n\t\tColumns, Table } from 'react-bulma-components';\n\nconst { Input, Field, Control, Label } = Form;\n\n \nconst ALLBORROW =gql`\n\tquery AllBorrow($estado:Int!){\n\t\tallBorrow(estado:$estado){\n\t\t\tprestamoId\n\t\t\testado\n\t\t\tlibro {\n\t\t\t\ttitulo\n\t\t\t}\n\t\t  }\n\t}\n `;\n \n const CONFIRMBORROW =gql`\n\t mutation ConfirmBorrow($prestamoId:Int!){\n\t\tconfirmBorrow(prestamoId:$prestamoId){\n\t\t\tmsg\n\t\t  }\n\t}\n `;\n\n const RETURNBORROW =gql`\n\t mutation ReturnBorrow($prestamoId:Int!){\n\t\treturnBorrow(prestamoId:$prestamoId){\n\t\t\tmsg\n\t\t  }\n\t}\n `; \n \nconst estados={'0':\"Pendiente\", '1':'Aprobado', '2':\"Regresado\"}\n \nvar Prestamos = withApollo((props) =>{\n\tconst [edoShow, setEdoShow] = useState(-1);\n\t// los datos de todos mis prestamos\n\tconst { loading, error, data, refetch } = useQuery(ALLBORROW, \n\t\t\t\t\t\t\t\t\t\t\t\t\t{variables: { estado: edoShow }}); \n\n\tconst handleAddrTypeChange = (e) => {\n\t\tsetEdoShow(parseInt(e.target.value))\n\t\t// actualizo la consulta\n\t\trefetch();\n\t}\n\n\tfunction procesa(e) {\n\t\tswitch(e.estado) {\n\t\t\tcase 0: // esta pendiente de aprobar\n\t\t\t\taprueba(e.prestamoId);\n\t\t\t\tbreak;\n\t\t\tcase 1: // esta aprobada\n\t\t\t\tregreso(e.prestamoId);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tfunction aprueba(id) {\n\t\t// hago la llamada a GrapQL para solicitar el prestamo\t\n\t\tprops.client\n\t\t  .query({\n\t\t\tquery: CONFIRMBORROW,\n\t\t\tvariables: {prestamoId: id }\n\t\t  })\n\t\t  .then(result => {\t\n\t\t\t\t// veo si hay errores\n\t\t\t\tif(result.errors !== undefined) {\n\t\t\t\t\t// debe lanzar la ventana modal de error\n\t\t\t\t\tconsole.log(\"error\",result.errors[0].message);\n\t\t\t\t} else {\n\t\t\t\t\t// actualizo la tabla\t\t\t\n\t\t\t\t\trefetch();\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\t\t  \n\t}\t\n\t\n\tfunction regreso(id) {\n\t\t// hago la llamada a GrapQL para solicitar el prestamo\t\n\t\tprops.client\n\t\t  .query({\n\t\t\tquery: RETURNBORROW,\n\t\t\tvariables: {prestamoId: id }\n\t\t  })\n\t\t  .then(result => {\t\n\t\t\t\t// veo si hay errores\n\t\t\t\tif(result.errors !== undefined) {\n\t\t\t\t\t// debe lanzar la ventana modal de error\n\t\t\t\t\tconsole.log(\"error\",result.errors[0].message);\n\t\t\t\t} else {\n\t\t\t\t\t// actualizo la tabla\t\t\t\n\t\t\t\t\trefetch();\n\t\t\t\t}\n\t\t\t}\n\t\t\t);\t\t  \n\t}\t\n\t\n\tfunction retIcon(edo) {\n\t\tswitch(edo) {\n\t\t\tcase 0:\n\t\t\t\treturn \"fa fa-check\";\n\t\t\tcase 1:\n\t\t\t\treturn \"fa fa-undo\";\n\t\t}\n\t}\n\t\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h1 className=\"title\"> Prestamos {props.update}</h1>\n\t\t\t<div className=\"select is-primary\">\n\t\t\t  <select onChange={e => handleAddrTypeChange(e)} >\n\t\t\t\t<option selected value=\"0\">Pendientes</option>\n\t\t\t\t<option value=\"1\">Aprobados</option>\n\t\t\t\t<option value=\"2\">Regresados</option>\n\t\t\t  </select>\n\t\t\t</div>\n\t\t\t\t\n\t\t\t<Section>\t\n\t\t\t  <Table>\n\t\t\t\t<thead>\n\t\t\t\t  <tr>\t\n\t\t\t\t\t<th>Titulo</th>\n\t\t\t\t\t<th>Edo. Prestamo</th>\n\t\t\t\t  </tr>\n\t\t\t\t </thead>\n\t\t\t\t <tbody>\n\t\t\t\t  {data && data.allBorrow.map(function(e,i) {\n\t\t\t\t\treturn <tr key={i}><td>{e.libro.titulo}</td><td>{estados[e.estado]}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t\t<i onClick={() => {procesa(e) }} className={retIcon(e.estado)}></i>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t})\t\t\t\t\t\n\t\t\t\t  }\t\t\t\t  \n\t\t\t\t </tbody>\n\t\t\t  </Table>\n\n\t\t\t</Section>\n\t\t</React.Fragment>\n\t);\n})\n\n\nexport default Prestamos;","import logo from './logo.svg';\nimport './App.css';\n\nimport { withApollo } from '@apollo/react-hoc';    \n\nimport React, { Fragment, useState, useCallback } from 'react'\nimport { gql, useQuery,useMutation } from '@apollo/client';\n\n// los componentes de Bulma, \nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Button, Navbar, Form, Modal, Section, Container, Notification, Media, Image, Content, Level,\n\t\tColumns, Table } from 'react-bulma-components';\n\n// los componentes propios de la interfaz\t\t\nimport AdminUsers from './AdminUsers'\nimport AdminBook from './AdminBook'\nimport Libros from './Libros'\nimport Prestamos from './Prestamos'\nimport AdminPrestamos from './AdminPrestamos'\n\t\t\nconst { Input, Field, Control, Label } = Form;\n\n\n \nconst LOGIN = gql`\n  mutation Login($email: String!, $password: String!) {\n\tlogin(email:$email, password: $password) {\n\t\ttoken\n\t\tusuario {\n\t\t\tusuarioId\n\t\t\tnombre\n\t\t\trol\n\t\t}\n    }\n  }\n`;\n\n \n// el formulario de Login\nfunction Login(props) {\n  const [form, setForm] = useState({ email: '', password: '' });\n  const update = (({ target }) => setForm({ ...form, [target.name]: target.value }))\n  return (\n    <React.Fragment>\n\t <div className=\"container is-fluid\">\n\n      <section data-section-id=\"1\" data-category=\"sign-in\"  className=\"section\">\n        <div className=\"container has-text-centered\">\n          <div className=\"columns is-centered\">\n            <div className=\"column is-5 is-4-desktop\">\n\t\t\t\n\t\t\t   <Field>\n\t\t\t\t<Control>\n\t\t\t\t  <Label>Email</Label>\n\t\t\t\t  <Input name=\"email\" value={form.email} onChange={update} />\n\t\t\t\t</Control>\n\t\t\t  </Field>\n\t\t\t  <Field>\n\t\t\t\t<Control>\n\t\t\t\t  <Label>Password</Label>\n\t\t\t\t  <Input name=\"password\" type=\"password\" value={form.password} onChange={update} />\n\t\t\t\t</Control>\n\t\t\t  </Field>\n\t\t\t  <Button.Group>\n\t\t\t\t<Button fullwidth rounded color=\"primary\" onClick={() => props.login(form)}>Login</Button>\n\t\t\t  </Button.Group>\n\t  \n\t\t   </div>\n\t\t </div>\n\t  </div>\n\t  </section>\n\t  </div>\n    </React.Fragment>\n  );\n}\n\nfunction ErrorModal(props) {\n\treturn(\n\t  <Modal show={props.show} onClose={props.onClose} >\n\t\t<Modal.Card>\n        <Modal.Card.Head>\n          <Modal.Card.Title>\n            Error\n          </Modal.Card.Title>\n        </Modal.Card.Head>\n        <Modal.Card.Body>\n          <Media>\n            <Media.Item renderAs=\"figure\" position=\"left\">\n              <Image size={64} alt=\"64x64\" src=\"http://bulma.io/images/placeholders/128x128.png\" />\n            </Media.Item>\n            <Media.Item>\n              <Content>\n                <p>\n                  {props.msg}\n                </p>\n              </Content>\n            </Media.Item>\n          </Media>\n        </Modal.Card.Body>\n        <Modal.Card.Foot style={{ alignItems: 'center', justifyContent: 'center' }}>\n          <p>\n\t\t\t<Button fullwidth rounded color=\"primary\" onClick={props.onClose}>Cerrar</Button>\n          </p>\n        </Modal.Card.Foot>\n      </Modal.Card>\n\t  </Modal>\t\n\t);\n}\n\n\nfunction BuquedaComp(props) {\n  const [busqueda, setBusqueda] = useState('');\n  const update = (({ target }) => setBusqueda(target.value ));\n  \n  return (\n\t<Level>\n\t <Level.Item>\n        <Field kind=\"addons\">\n          <Control>\n            <Input name=\"busqueda\" value={busqueda} onChange={update} />\n          </Control>\n          <Control>\n            <Button fullwidth rounded color=\"primary\" onClick={() => props.search(busqueda)}>\n\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t<i className=\"fa fa-search\"></i>\n\t\t\t\t</span>\n\t\t\t</Button>\n          </Control>\n        </Field>\n      </Level.Item>\n\t </Level>\n  );\n}\n\n\nvar LibrosCont = withApollo((props) =>{\n\tasync function doSearch(qry){\n\t}\n\t\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h1 className=\"title\">Busqueda de libros</h1>\n\t\t\t<BuquedaComp search={doSearch} />\n\t\t\t<div> OK </div>\n\t\t</React.Fragment>\n\t);\n})\n\n\nfunction MainLayout(props) {\n\tconst [update, setUpdate] = useState(0);\n\tconst updatePrestamo=()=> setUpdate(update+1)\n\tconst perfiles=[\"Administador\",\"Bibliotecario\",\"Lector\"]\n\t\n\treturn (\n\t<Container>\n\t<h1 className=\"title\"> Bienvenido al portal de {perfiles[parseInt(props.rol)]}</h1>\n\t<Columns>\n\t  <Columns.Column >\n\t\t<Notification >\t\t\t\n\t\t\t{(() => {\n\t\t\tswitch (parseInt(props.rol)) {\n\t\t\t  case 0: // admin\n\t\t\t\treturn <AdminBook />;\n\t\t\t  case 1: // bibliotecatio\n\t\t\t\treturn <AdminPrestamos />;\t\t\t\t\t\t\t\t\n\t\t\t  case 2: // user\n\t\t\t\treturn <Libros rol={props.rol} usuarioId={props.usuarioId} updatePrestamo={updatePrestamo} />;\n\t\t\t  default: // cualquier otra cosa\n\t\t\t\treturn <div />;\t\t\t \n\t\t\t}\n\t\t  })()}\n\t\t</Notification>\n\t  </Columns.Column>\n\n\t\t\t{(() => {\n\t\t\t\tswitch (parseInt(props.rol)) {\n\t\t\t\t  case 0: // admin\n\t\t\t\t\treturn \t  <Columns.Column>\n\t\t\t\t\t\t\t\t<Notification color=\"info\">\n\t\t\t\t\t\t\t\t\t<AdminUsers />\n\t\t\t\t\t\t\t\t</Notification>\n\t\t\t\t\t\t\t </Columns.Column>;\n\t\t\t\t  case 1: // bibliotecatio\n\t\t\t\t\treturn <div />;\n\t\t\t\t  case 2: // user\n\t\t\t\t\treturn \t  <Columns.Column>\n\t\t\t\t\t\t\t\t<Notification color=\"info\">\n\t\t\t\t\t\t\t\t\t<Prestamos rol={props.rol} usuarioId={props.usuarioId} update={update} />\n\t\t\t\t\t\t\t\t</Notification>\n\t\t\t\t\t\t\t </Columns.Column>;\n\t\t\t\t  \n\t\t\t\t\treturn \n\t\t\t\t  default: // cualquier otra cosa\n\t\t\t\t\treturn <div />;\t\t\t \n\t\t\t\t}\n\t\t\t  })()}\t\n\t</Columns>\n\t</Container>\n\t);\n}\n\n\n\n\nfunction App() {\n\tconst [userName, setUserName] = useState(\"\");\n\tconst [userId, setUserId] = useState(0);\n\tconst [userRol, setUserRol] = useState(localStorage.getItem(\"rol\")===null?3:localStorage.getItem(\"rol\"));\n\tconst [isLogin, setIsLogin] = useState(localStorage.getItem(\"token\")===null?false:true);\n\t\n\t// Para mostrar la ventana de error\n\tconst [isError, setIsError] = useState({show:false,msg:\"\"});\n\n\n\t// para el menu responsive\n\tconst [isMenuActive, setisMenuActive] = React.useState(false)\n\n    const [userLogin,{ data, loading: mutationLoading, error: mutationError }] = useMutation(LOGIN);\n  \n  \n  async function login(data) {\n\ttry {\n\t\tif(data.email===\"\" || data.password===\"\") return;\n\t\t// pido el login al servidor\n\t\tvar ld =await userLogin({ variables: { email: data.email , password: data.password } })\n\t\ttry {\n\t\t\tlocalStorage.setItem('token',ld.data.login.token);\n\t\t\tlocalStorage.setItem('rol',ld.data.login.usuario.rol);\n\t\t\tsetIsLogin(true);\n\t\t\tsetUserId(ld.data.login.usuario.usuarioId);\n\t\t\tsetUserName(ld.data.login.usuario.nombre);\n\t\t\tsetUserRol(ld.data.login.usuario.rol);\n\t\t}catch(e) {\t}\n\t}catch(e) {\n\t\t//console.log(e.message);\n\t\tsetIsLogin(false);\n\t\tsetIsError({show:true, msg:e.message});\t\t\n\t}\n  }\n  \n  function logout() {\n\tlocalStorage.removeItem(\"token\");\n\tlocalStorage.removeItem(\"rol\");\n\tsetIsLogin(false);\n\tsetUserName(\"\");\n\tsetUserRol(3);\n  }\n  \n  function closeModal(){\n\tsetIsError({show:false, msg:\"\"})\n  }\n  \n  return (  \n\t<React.Fragment>\n\t <Navbar fixed={'top'} >\n        <Navbar.Brand>\n          <Navbar.Item renderAs=\"a\" href=\"#\">\n            <img src=\"https://bulma.io/images/bulma-logo.png\" alt=\"Bulma: a modern CSS framework based on Flexbox\" width=\"112\" height=\"28\" />\n          </Navbar.Item>\n          <Navbar.Burger \n\t\t\tdata-target=\"navbarBasicExample\" \n\t\t\tclassName={`navbar-burger burger ${isMenuActive ? \"is-active\" : \"\"}`}\n\t\t\tonClick={() => {setisMenuActive(!isMenuActive) }} \n\t\t  />\n        </Navbar.Brand>\n        <Navbar.Menu \n\t\t\tid=\"navbarBasicExample\"\n\t\t\tclassName={`navbar-menu ${isMenuActive ? \"is-active\" : \"\"}`} \n\t\t >\n\t\t  \n              <Navbar.Container position=\"end\">\n\t\t\t<Navbar.Item  href=\"#\">\n              {(isLogin && userName) || \"\" }\n            </Navbar.Item>\n            <Navbar.Item onClick={logout} href=\"#\">\n                  Logout\n            </Navbar.Item>\n          </Navbar.Container>\n        </Navbar.Menu>\n      </Navbar>\n\t  \n\t  \n\t  {!isLogin ? (\n\t\t<Login login={login}/> \n\t  ):(\n\t\t<MainLayout rol={userRol} usuarioId={userId} />\n      )}\n\t  \n\t  <ErrorModal show={isError.show} onClose={closeModal} msg={isError.msg} />\n\t\n\t  </React.Fragment>\n  );\n}\n\n//<div> {data} </div>\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport { ApolloClient, NormalizedCacheObject, ApolloProvider, gql, useQuery, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n// la \nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // busca el token en el navegador\n  const token = localStorage.getItem('token');\n  // que le agregue esto al header\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\n// configuracion para prevenir el cache\nconst defaultOptions: DefaultOptions = {\n      watchQuery: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'ignore',\n      },\n      query: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'all',\n      },\n    }\n\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink),\n  defaultOptions: defaultOptions,\n});\n\n/*\nclient\n  .query({\n    query: gql`\n      {\n        allUser{\n\t\t\tnombre\n\t\t\temail\n\t\t\tusuarioId\n        }\n      }\n    `\n  })\n  .then(result => console.log(\"jjjj\",result));\n*/\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'),\n);\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}